service: govScanInfo

package:
  exclude:
    - test/*
    - test*
    - venv/**

provider:
  name: aws
  runtime: python3.6
  region: us-west-2
  stage: Development  
  memorySize: 128 # explicitly set to 128
  timeout: 10 # default is 6
  iamRoleStatements: # permissions for all of your functions can be set here
    - Effect: Allow
      Action: # Gives permission to DynamoDB tables in a specific region
        - dynamodb:Query
        - dynamodb:PutItem
        - dynamodb:BatchWriteItem
      Resource: "arn:aws:dynamodb:us-west-2:820756113164:table/siteAuditGovMy"
    - Effect: Allow
      Action:
        s3:ListBucket
      Resource: "arn:aws:s3:::files.siteaudit.sayakenahack.com"
    - Effect: Allow
      Action:
        s3:GetObject
      Resource: "arn:aws:s3:::files.siteaudit.sayakenahack.com/*"

versionFunctions: false # don't keep old versions (there's GIT for that)

functions:
  get_latest_fqdn: # function Name
    handler: main.get_latest_fqdn # def within main.py that will handle this
    name: ${opt:stage, self:provider.stage}-get_latest_fqdn
    description: Get Full TLS Record for fqdn
    events:
      - http:
          path: /api/v2/siteLatest # path of this function
          method: get
          cors: true
  get_history_fqdn:
    handler: main.get_history_fqdn
    name: ${opt:stage, self:provider.stage}-get_history_fqdn
    description: View History of Site
    timeout: 6 # maximum timeout for the downloads
    memorySize: 256 # more RAM = more CPU on lambda, need more CPU!
    reservedConcurrency: 2 # maximum number of concurrent history
    events:
      - http:
          path: /api/v2/siteHistory
          method: get
          cors: true
  get_scan:
    handler: main.get_scan
    name: ${opt:stage, self:provider.stage}-get_scan
    description: View History of Site
    events:
      - http:
          path: /api/v2/scanDetails
          method: get
          cors: true
  list_scans:
    handler: list_scans.list_scans
    name: ${opt:stage, self:provider.stage}-list_scans
    description: List scan files in S3 Bucket
    events:
      - http:
          path: /api/v2/listScans
          method: get
          cors: true
  list_hostnames:
    handler: list_scans.list_hostnames
    name: ${opt:stage, self:provider.stage}-list_hostnames
    description: List hostnames that are scanned
    events:
      - http:
          path: /api/v2/listFQDNs
          method: get
          cors: true



###
### Comment all below if you do not wish to create bucket & DynamoDB ###
###

# resources:  
  # Resources:
    # uploadbucket:
    #  DeletionPolicy: Retain
    #  Type: AWS::S3::Bucket
    #  Properties:
    #    BucketName: files.siteaudit.sayakenahack.com # Hard Code, change this later
    # SiteAuditTable:
      # Type: 'AWS::DynamoDB::Table'
      # DeletionPolicy: Retain  
      # Properties:
        # TableName: siteAuditGovMy # Hard Code, change this later
        # AttributeDefinitions:
          # - AttributeName: FQDN # FQDN is an acronym, hence CAPS :)
          #   AttributeType: S
          # - AttributeName: scanDate 
          #   AttributeType: S
        # KeySchema:
          # - AttributeName: FQDN
          #   KeyType: HASH
          # - AttributeName: scanDate
          #   KeyType: RANGE
        # ProvisionedThroughput:
          # ReadCapacityUnits: 2
          # WriteCapacityUnits: 1

