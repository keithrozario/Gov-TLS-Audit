{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket"
    },
    "GetUnderscorebyUnderscorefqdnLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Dev-get_by_FQDN"
      }
    },
    "InsertUnderscoreintoUnderscoredynamoLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/Dev-insert_into_dynamo"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "Dev",
                  "jangan-kena-hack",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Dev-get_by_FQDN:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Dev-insert_into_dynamo:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Dev-get_by_FQDN:*:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/Dev-insert_into_dynamo:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Query",
                    "dynamodb:PutItem",
                    "dynamodb:BatchWriteItem"
                  ],
                  "Resource": "arn:aws:dynamodb:us-west-2:*:*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "jangan-kena-hack",
              "Dev",
              "us-west-2",
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "GetUnderscorebyUnderscorefqdnLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/jangan-kena-hack/Dev/1520256631313-2018-03-05T13:30:31.313Z/jangan-kena-hack.zip"
        },
        "FunctionName": "Dev-get_by_FQDN",
        "Handler": "handler.get_by_fqdn",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "python3.6",
        "Timeout": 6,
        "Description": "Get Full TLS Record for fqdn"
      },
      "DependsOn": [
        "GetUnderscorebyUnderscorefqdnLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "GetUnderscorebyUnderscorefqdnLambdaVersionRiiKnlaGc4grFQTrQXE7bawErSoLxhfuH5JSscwVnU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetUnderscorebyUnderscorefqdnLambdaFunction"
        },
        "CodeSha256": "Wv1Y98FDv+BDdfDJi6evlevLBB9ytxcC+BeWOYETxdE=",
        "Description": "Get Full TLS Record for fqdn"
      }
    },
    "InsertUnderscoreintoUnderscoredynamoLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/jangan-kena-hack/Dev/1520256631313-2018-03-05T13:30:31.313Z/jangan-kena-hack.zip"
        },
        "FunctionName": "Dev-insert_into_dynamo",
        "Handler": "insert.insert_into_dynamo",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "python3.6",
        "Timeout": 300,
        "Description": "Insert into Dynamo from jsonl file in S3 Bucket. No events. Manual invocation."
      },
      "DependsOn": [
        "InsertUnderscoreintoUnderscoredynamoLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "InsertUnderscoreintoUnderscoredynamoLambdaVersionaLN8TIKwsJxPuaPqUZceSA9wYxl42w5Oywx9gcmgIo": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "InsertUnderscoreintoUnderscoredynamoLambdaFunction"
        },
        "CodeSha256": "Wv1Y98FDv+BDdfDJi6evlevLBB9ytxcC+BeWOYETxdE=",
        "Description": "Insert into Dynamo from jsonl file in S3 Bucket. No events. Manual invocation."
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "Dev-jangan-kena-hack",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        }
      }
    },
    "ApiGatewayResourceSitedetails": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "siteDetails",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodSitedetailsGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceSitedetails"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetUnderscorebyUnderscorefqdnLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayDeployment1520256631325": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "Dev"
      },
      "DependsOn": [
        "ApiGatewayMethodSitedetailsGet"
      ]
    },
    "GetUnderscorebyUnderscorefqdnLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetUnderscorebyUnderscorefqdnLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "GetUnderscorebyUnderscorefqdnLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetUnderscorebyUnderscorefqdnLambdaVersionRiiKnlaGc4grFQTrQXE7bawErSoLxhfuH5JSscwVnU"
      }
    },
    "InsertUnderscoreintoUnderscoredynamoLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "InsertUnderscoreintoUnderscoredynamoLambdaVersionaLN8TIKwsJxPuaPqUZceSA9wYxl42w5Oywx9gcmgIo"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.us-west-2.amazonaws.com/Dev"
          ]
        ]
      }
    }
  }
}